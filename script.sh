#!/bin/bash
#
#set -e
#
# File Type      : Kernel Build Script
# Github         : UtsavisGreat <utsavbalar1231@gmail.com>
# Build Date     : Thursday Apr 19, 2019
# xda-developers : UtsavTheGreat
# Kernel name    : IMMENSITY

DATE_POSTFIX=$(date +"%Y%m%d")

############################################################################################################################################################
## kernel dependencies																	   #
############################################################################################################################################################

KERNEL_DIR=$PWD
HOMEPATH=/home/utsavbalar1231
KERNEL_TOOLCHAIN=$HOMEPATH/gcc8/bin/aarch64-linux-gnu-
CLANG_TOOLCHAIN=$HOMEPATH/clang/bin/clang-9
KERNEL_DEFCONFIG=potter_defconfig
DTB=$KERNEL_DIR/dtbtool/
ZIP_DIR=$KERNEL_DIR/zip/
KERNEL=IMMENSITY-KERNEL
TYPE=HMP
FINAL_KERNEL_ZIP=$KERNEL-$TYPE-$DATE_POSTFIX.zip
JOBS=8

############################################################################################################################################################
# Speed up build process																   #
############################################################################################################################################################

MAKE="./makeparallel"

echo "INITIALIZE ALL THE DIRECTORIES"

############################################################################################################################################################
# Create Necessay zip Folder                                                                                                                               #
############################################################################################################################################################

cd $HOMEPATH
rm -rf IMMEN*
cd $ZIP_DIR
mkdir treble-unsupported
cd $KERNEL_DIR

############################################################################################################################################################
# Initialize Build                                                                                                                                         #
############################################################################################################################################################

BUILD_START=$(date +"%s")
blue='\033[0;34m'
cyan='\033[0;36m'
purple='\033[0;35m'
yellow='\033[0;33m'
red='\033[0;32m'
nocol='\033[0m'

############################################################################################################################################################
# Some ASCII Code       	                                                                                                                           #
############################################################################################################################################################

echo -e "$cyan ______________________"
echo " "
echo -e "$yellow        #  I  #"
echo -e "$yellow        #  M  #"
echo -e "$yellow        #  M  #"
echo -e "$yellow        #  E  #"
echo -e "$yellow 	#  N  #"
echo -e "$yellow        #  S  #"
echo -e "$yellow 	#  I  #"
echo -e "$yellow        #  T  #"
echo -e "$yellow 	#  Y  #"
echo -e "$nocol           |   "
echo -e "$yellow        #  K  #"
echo -e "$yellow        #  E  #"
echo -e "$yellow        #  R  #"
echo -e "$yellow        #  N  #"
echo -e "$yellow        #  E  #"
echo -e "$yellow        #  L  #"
echo -e "$cyan ______________________"

############################################################################################################################################################
# ALways Keep your Source Clean                                                                                                                            #
############################################################################################################################################################

echo -e  "$purple // - Cleaning up - //"
sudo make clean && sudo make mrproper && rm -rf out/ && git clean -f

############################################################################################################################################################

echo -e "$cyan // - defconfig is set to $KERNEL_DEFCONFIG - //"
echo -e "$blue_____________________________________________"
echo -e "$blue          BUILDING IMMENSITY•KERNEL          "
echo -e "________________________________________________$nocol"

############################################################################################################################################################
# Start Compiling 	                                                                                                                                   #
############################################################################################################################################################

export ARCH=arm64
make $KERNEL_DEFCONFIG O=out
make 		CC=$CLANG_TOOLCHAIN \
		CLANG_TRIPLE=aarch64-linux-gnu- \
		CROSS_COMPILE=$KERNEL_TOOLCHAIN \
		-j$JOBS \
		O=out
############################################################################################################################################################
# Generate DTB		                                                                                                                                   #
############################################################################################################################################################

echo -e "$cyan_________________________"
 echo " // - Generating DT.img - //"
echo -e "______________________________$nocol"

$DTB/dtbToolCM -2 -o $KERNEL_DIR/out/arch/arm64/boot/dtb -s 2048 -p $KERNEL_DIR/out/scripts/dtc/ $KERNEL_DIR/out/arch/arm64/boot/dts/qcom/

############################################################################################################################################################
# Verify all the Necessary Stuff                                                                                                                           #
############################################################################################################################################################

echo -e "$yellow // - Verify Image.gz - //"
ls $KERNEL_DIR/out/arch/arm64/boot/Image.gz

echo -e "$yellow // - Verify dtb - //"
ls $KERNEL_DIR/out/arch/arm64/boot/dtb

echo -e "$yellow // - Verifying zip Directory - //"
ls $ZIP_DIR/

############################################################################################################################################################
# CLean Up Zip DIR		                                                                                                                                   #
############################################################################################################################################################

echo -e "$yellow // - Removing leftovers - //"
rm -rf $ZIP_DIR/Image.gz
rm -rf $ZIP_DIR/$FINAL_KERNEL_ZIP
rm -rf $ZIP_DIR/dtb

############################################################################################################################################################

echo -e "$yellow // - Copying Image.gz - //"
cp $KERNEL_DIR/out/arch/arm64/boot/Image.gz $ZIP_DIR/treble-unsupported/

############################################################################################################################################################

echo -e "$yellow // - Copying dtb - //"
cp $KERNEL_DIR/out/arch/arm64/boot/dtb $ZIP_DIR/treble-unsupported/

############################################################################################################################################################
																			   #
echo -e "$yellow // - Time to zip everything up! - //"												           #
cd $ZIP_DIR/																		   #
zip -r9 $FINAL_KERNEL_ZIP * -x README $FINAL_KERNEL_ZIP													   #
cp $KERNEL_DIR/zip/$FINAL_KERNEL_ZIP $HOMEPATH/$FINAL_KERNEL_ZIP											   #
																			   #
############################################################################################################################################################
																			   
echo -e "$yellow // - Build Successfull - //"													           
cd $KERNEL_DIR																		   
																			   
############################################################################################################################################################
# Clean up Everything																	   #
############################################################################################################################################################
echo -e "$yellow // - Cleaning up - //$nocol"                                                                                                              #
rm -rf $ZIP_DIR/$FINAL_KERNEL_ZIP															   #
rm -rf $ZIP_DIR/Image.gz																   #
rm -rf $ZIP_DIR/dtb																	   #
rm -rf $ZIP_DIR/treble-unsupported															   #
rm -rf $KERNEL_DIR/out/																	   #
																			   #
############################################################################################################################################################
# Build Status																		   #
############################################################################################################################################################
#
BUILD_END=$(date +"%s")																	   
DIFF=$(($BUILD_END - $BUILD_START))															   
echo -e "$yellow IMMENSITY • KERNEL Build completed in $(($DIFF / 60)) minute(s) and $(($DIFF % 60)) seconds."						   
																			   
############################################################################################################################################################
